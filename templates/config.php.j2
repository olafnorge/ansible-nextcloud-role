<?php
/**
 *
 *  DO NOT EDIT! {{ ansible_managed }}
 *
 */


/**
 * This configuration file is only provided to document the different
 * configuration options and their usage.
 *
 * DO NOT COMPLETELY BASE YOUR CONFIGURATION FILE ON THIS SAMPLE. THIS MAY BREAK
 * YOUR INSTANCE. Instead, manually copy configuration switches that you
 * consider important for your instance to your working ``config.php``, and
 * apply configuration options that are pertinent for your instance.
 *
 * This file is used to generate the configuration documentation.
 * Please consider following requirements of the current parser:
 *  * all comments need to start with `/**` and end with ` *\/` - each on their
 *    own line
 *  * add a `@see CONFIG_INDEX` to copy a previously described config option
 *    also to this line
 *  * everything between the ` *\/` and the next `/**` will be treated as the
 *    config option
 *  * use RST syntax
 */

return [
  /**
   * This is a unique identifier for your Nextcloud installation, created
   * automatically by the installer. This example is for documentation only,
   * and you should never use it because it will not work. A valid ``instanceid``
   * is created when you install Nextcloud.
   *
   * 'instanceid' => 'd3c944a9a',
   */
  'instanceid' => '',

   /**
    * The salt used to hash all passwords, auto-generated by the Nextcloud
    * installer. (There are also per-user salts.) If you lose this salt you lose
    * all your passwords. This example is for documentation only, and you should
    * never use it.
    *
    * @deprecated This salt is deprecated and only used for legacy-compatibility,
    * developers should *NOT* use this value for anything nowadays.
    *
    * 'passwordsalt' => 'd3c944a9af095aa08f',
   */
  'passwordsalt' => '',

  /**
   * Your list of trusted domains that users can log into. Specifying trusted
   * domains prevents host header poisoning. Do not remove this, as it performs
   * necessary security checks.
   * You can specify:
   *
   * - the exact hostname of your host or virtual host, e.g. demo.example.org.
   * - the exact hostname with permitted port, e.g. demo.example.org:443.
   *   This disallows all other ports on this host
   * - use * as a wildcard, e.g. ubos-raspberry-pi*.local will allow
   *   ubos-raspberry-pi.local and ubos-raspberry-pi-2.local
   */
  'trusted_domains' => json_decode('{{ nextcloud_olafnorge_de_environment.trusted_domains | default(['*']) | to_json }}', true),

  /**
   * Where user files are stored. The SQLite database is also stored here, when
   * you use SQLite.
   *
   * Default to ``/var/www/data`` in the Nextcloud directory.
   */
  'datadirectory' => '{{ nextcloud_olafnorge_de_environment.data_directory | default("/var/www/data") }}',

  /**
   * Identifies the database used with this installation. See also config option
   * ``supportedDatabases``
   *
   * Available:
   * 	- sqlite (SQLite3)
   * 	- mysql (MySQL/MariaDB)
   * 	- pgsql (PostgreSQL)
   *
   * Defaults to ``mysql``
   */
  'dbtype' => '{{ nextcloud_olafnorge_de_environment.db_type | default("mysql") }}',

  /**
   * Your host server name, for example ``localhost``, ``hostname``,
   * ``hostname.example.com``, or the IP address. To specify a port use
   * ``hostname:####``; to specify a Unix socket use
   * ``localhost:/path/to/socket``.
   */
  'dbhost' => '{{ nextcloud_olafnorge_de_environment.db_host | default("database") }}',

  /**
   * The name of the Nextcloud database, which is set during installation. You
   * should not need to change this.
   */
  'dbname' => '{{ nextcloud_olafnorge_de_environment.db_name | default("nextcloud") }}',

  /**
   * The user that Nextcloud uses to write to the database. This must be unique
   * across Nextcloud instances using the same SQL database. This is set up during
   * installation, so you shouldn't need to change it.
   */
  'dbuser' => '{{ nextcloud_olafnorge_de_environment.db_user | default("nextcloud") }}',

  /**
   * The password for the database user. This is set up during installation, so
   * you shouldn't need to change it.
   */
  'dbpassword' => '',

  /**
   * Prefix for the Nextcloud tables in the database.
   *
   * Default to ``oc_``
   */
  'dbtableprefix' => '{{ nextcloud_olafnorge_de_environment.db_prefix | default("") }}',

  /**
   * This sets the default language on your Nextcloud server, using ISO_639-1
   * language codes such as ``en`` for English, ``de`` for German, and ``fr`` for
   * French. It overrides automatic language detection on public pages like login
   * or shared items. User's language preferences configured under "personal ->
   * language" override this setting after they have logged in.
   *
   * Defaults to ``en``
   */
  'default_language' => '{{ nextcloud_olafnorge_de_environment.default_language | default("en") }}',

  /**
   * With this setting a language can be forced for all users. If a language is
   * forced, the users are also unable to change their language in the personal
   * settings. If users shall be unable to change their language, but users have
   * different languages, this value can be set to ``true`` instead of a language
   * code.
   *
   * Defaults to ``false``
   */
  'force_language' => {{ nextcloud_olafnorge_de_environment.force_language | default('false') }},

  /**
   * Set the default app to open on login. Use the app names as they appear in the
   * URL after clicking them in the Apps menu, such as documents, calendar, and
   * gallery. You can use a comma-separated list of app names, so if the first
   * app is not enabled for a user then Nextcloud will try the second one, and so
   * on. If no enabled apps are found it defaults to the Files app.
   *
   * Defaults to ``files``
   */
  'defaultapp' => '{{ nextcloud_olafnorge_de_environment.default_app | default("files") }}',

  /**
   * ``true`` enables the Help menu item in the user menu (top right of the
   * Nextcloud Web interface). ``false`` removes the Help item.
   */
  'knowledgebaseenabled' => {{ nextcloud_olafnorge_de_environment.knowledgebase_enabled | default('true') }},

  /**
   * ``true`` allows users to change their display names (on their Personal
   * pages), and ``false`` prevents them from changing their display names.
   */
  'allow_user_to_change_display_name' => {{ nextcloud_olafnorge_de_environment.allow_user_to_change_display_name | default('true') }},

  /**
   * Enable or disable session keep-alive when a user is logged in to the Web UI.
   * Enabling this sends a "heartbeat" to the server to keep it from timing out.
   *
   * Defaults to ``true``
   */
  'session_keepalive' => {{ nextcloud_olafnorge_de_environment.session_keepalive | default('true') }},

  /**
   * Enforce token authentication for clients, which blocks requests using the user
   * password for enhanced security. Users need to generate tokens in personal settings
   * which can be used as passwords on their clients.
   *
   * Defaults to ``false``
   */
  'token_auth_enforced' => {{ nextcloud_olafnorge_de_environment.token_auth_enforced | default('false') }},

  /**
   * Whether the bruteforce protection shipped with Nextcloud should be enabled or not.
   *
   * Disabling this is discouraged for security reasons.
   *
   * Defaults to ``true``
   */
  'auth.bruteforce.protection.enabled' => {{ nextcloud_olafnorge_de_environment.auth_bruteforce_protection_enabled | default('true') }},

  /**
   * The directory where the skeleton files are located. These files will be
   * copied to the data directory of new users. Leave empty to not copy any
   * skeleton files.
   *
   * Defaults to ``core/skeleton`` in the Nextcloud directory.
   */
  'skeletondirectory' => '{{ nextcloud_olafnorge_de_environment.skeletondirectory | default("core/skeleton") }}',

  /**
   * The ``user_backends`` app (which needs to be enabled first) allows you to
   * configure alternate authentication backends. Supported backends are:
   * IMAP (OC_User_IMAP), SMB (OC_User_SMB), and FTP (OC_User_FTP).
   */
  'user_backends' => json_decode('{{ nextcloud_olafnorge_de_environment.user_backends | default([]) | to_json }}', true),

  /**
   * If your user backend does not allow password resets (e.g. when it's a
   * read-only user backend like LDAP), you can specify a custom link, where the
   * user is redirected to, when clicking the "reset password" link after a failed
   * login-attempt.
   * In case you do not want to provide any link, replace the url with 'disabled'
   */
  'lost_password_link' => '{{ nextcloud_olafnorge_de_environment.lost_password_link | default("") }}',

  /**
   * The return address that you want to appear on emails sent by the Nextcloud
   * server, for example ``nc-admin@example.com``, substituting your own domain,
   * of course.
   */
  'mail_domain' => '{{ nextcloud_olafnorge_de_environment.mail_domain | default("") }}',

  /**
   * FROM address that overrides the built-in ``sharing-noreply`` and
   * ``lostpassword-noreply`` FROM addresses.
   *
   * Defaults to different from addresses depending on the feature.
   */
  'mail_from_address' => '{{ nextcloud_olafnorge_de_environment.mail_from_address | default("") }}',

  /**
   * Enable SMTP class debugging.
   *
   * Defaults to ``false``
   */
  'mail_smtpdebug' => {{ nextcloud_olafnorge_de_environment.mail_smtp_debug | default('false') }},

  /**
   * Which mode to use for sending mail: ``sendmail``, ``smtp``, ``qmail`` or
   * ``php``.
   *
   * If you are using local or remote SMTP, set this to ``smtp``.
   *
   * If you are using PHP mail you must have an installed and working email system
   * on the server. The program used to send email is defined in the ``php.ini``
   * file.
   *
   * For the ``sendmail`` option you need an installed and working email system on
   * the server, with ``/usr/sbin/sendmail`` installed on your Unix system.
   *
   * For ``qmail`` the binary is /var/qmail/bin/sendmail, and it must be installed
   * on your Unix system.
   *
   * Defaults to ``php``
   */
  'mail_smtpmode' => '{{ nextcloud_olafnorge_de_environment.mail_smtp_mode | default("php") }}',

  /**
   * This depends on ``mail_smtpmode``. Specify the IP address of your mail
   * server host. This may contain multiple hosts separated by a semi-colon. If
   * you need to specify the port number append it to the IP address separated by
   * a colon, like this: ``127.0.0.1:24``.
   *
   * Defaults to ``127.0.0.1``
   */
  'mail_smtphost' => '{{ nextcloud_olafnorge_de_environment.mail_smtp_host | default("127.0.0.1") }}',

  /**
   * This depends on ``mail_smtpmode``. Specify the port for sending mail.
   *
   * Defaults to ``25``
   */
  'mail_smtpport' => {{ nextcloud_olafnorge_de_environment.mail_smtp_port | default("25") }},

  /**
   * This depends on ``mail_smtpmode``. This sets the SMTP server timeout, in
   * seconds. You may need to increase this if you are running an anti-malware or
   * spam scanner.
   *
   * Defaults to ``10`` seconds
   */
  'mail_smtptimeout' => {{ nextcloud_olafnorge_de_environment.mail_smtp_timeout | default("10") }},

  /**
   * This depends on ``mail_smtpmode``. Specify when you are using ``ssl`` or
   * ``tls``, or leave empty for no encryption.
   *
   * Defaults to ``''`` (empty string)
   */
  'mail_smtpsecure' => '{{ nextcloud_olafnorge_de_environment.mail_smtp_secure | default("") }}',

  /**
   * This depends on ``mail_smtpmode``. Change this to ``true`` if your mail
   * server requires authentication.
   *
   * Defaults to ``false``
   */
  'mail_smtpauth' => {{ nextcloud_olafnorge_de_environment.mail_smtp_auth | default('false') }},

  /**
   * This depends on ``mail_smtpmode``. If SMTP authentication is required, choose
   * the authentication type as ``LOGIN`` or ``PLAIN``.
   *
   * Defaults to ``LOGIN``
   */
  'mail_smtpauthtype' => '{{ nextcloud_olafnorge_de_environment.mail_smtp_authtype | default("LOGIN") }}',

  /**
   * This depends on ``mail_smtpauth``. Specify the username for authenticating to
   * the SMTP server.
   *
   * Defaults to ``''`` (empty string)
   */
  'mail_smtpname' => '{{ nextcloud_olafnorge_de_environment.mail_smtp_name | default("") }}',

  /**
   * This depends on ``mail_smtpauth``. Specify the password for authenticating to
   * the SMTP server.
   *
   * Default to ``''`` (empty string)
   */
  'mail_smtppassword' => '',

  /**
   * The automatic hostname detection of Nextcloud can fail in certain reverse
   * proxy and CLI/cron situations. This option allows you to manually override
   * the automatic detection; for example ``www.example.com``, or specify the port
   * ``www.example.com:8080``.
   */
  'overwritehost' => '{{ nextcloud_olafnorge_de_environment.overwrite_host | default("") }}',

  /**
   * When generating URLs, Nextcloud attempts to detect whether the server is
   * accessed via ``https`` or ``http``. However, if Nextcloud is behind a proxy
   * and the proxy handles the ``https`` calls, Nextcloud would not know that
   * ``ssl`` is in use, which would result in incorrect URLs being generated.
   * Valid values are ``http`` and ``https``.
   */
  'overwriteprotocol' => '{{ nextcloud_olafnorge_de_environment.overwrite_protocol | default("") }}',

  /**
   * Use this configuration parameter to specify the base URL for any URLs which
   * are generated within Nextcloud using any kind of command line tools (cron or
   * occ). The value should contain the full base URL:
   * ``https://www.example.com/nextcloud``
   *
   * Defaults to ``''`` (empty string)
   */
  'overwrite.cli.url' => '{{ nextcloud_olafnorge_de_environment.overwrite_cli_url | default("") }}',

  /**
   * If the trash bin app is enabled (default), this setting defines the policy
   * for when files and folders in the trash bin will be permanently deleted.
   * The app allows for two settings, a minimum time for trash bin retention,
   * and a maximum time for trash bin retention.
   * Minimum time is the number of days a file will be kept, after which it
   * may be deleted. Maximum time is the number of days at which it is guaranteed
   * to be deleted.
   * Both minimum and maximum times can be set together to explicitly define
   * file and folder deletion. For migration purposes, this setting is installed
   * initially set to "auto", which is equivalent to the default setting in
   * Nextcloud.
   *
   * Available values:
   *
   * * ``auto``
   *     default setting. keeps files and folders in the trash bin for 30 days
   *     and automatically deletes anytime after that if space is needed (note:
   *     files may not be deleted if space is not needed).
   * * ``D, auto``
   *     keeps files and folders in the trash bin for D+ days, delete anytime if
   *     space needed (note: files may not be deleted if space is not needed)
   * * ``auto, D``
   *     delete all files in the trash bin that are older than D days
   *     automatically, delete other files anytime if space needed
   * * ``D1, D2``
   *     keep files and folders in the trash bin for at least D1 days and
   *     delete when exceeds D2 days
   * * ``disabled``
   *     trash bin auto clean disabled, files and folders will be kept forever
   *
   * Defaults to ``auto``
   */
  'trashbin_retention_obligation' => '{{ nextcloud_olafnorge_de_environment.trashbin_retention_obligation | default("auto") }}',

  /**
   * If the versions app is enabled (default), this setting defines the policy
   * for when versions will be permanently deleted.
   * The app allows for two settings, a minimum time for version retention,
   * and a maximum time for version retention.
   * Minimum time is the number of days a version will be kept, after which it
   * may be deleted. Maximum time is the number of days at which it is guaranteed
   * to be deleted.
   * Both minimum and maximum times can be set together to explicitly define
   * version deletion. For migration purposes, this setting is installed
   * initially set to "auto", which is equivalent to the default setting in
   * Nextcloud.
   *
   * Available values:
   *
   * * ``auto``
   *     default setting. Automatically expire versions according to expire
   *     rules. Please refer to :doc:`../configuration_files/file_versioning` for
   *     more information.
   * * ``D, auto``
   *     keep versions at least for D days, apply expire rules to all versions
   *     that are older than D days
   * * ``auto, D``
   *     delete all versions that are older than D days automatically, delete
   *     other versions according to expire rules
   * * ``D1, D2``
   *     keep versions for at least D1 days and delete when exceeds D2 days
   * * ``disabled``
   *     versions auto clean disabled, versions will be kept forever
   *
   * Defaults to ``auto``
   */
  'versions_retention_obligation' => '{{ nextcloud_olafnorge_de_environment.versions_retention_obligation | default("auto") }}',

  /**
   * Checks an app before install whether it uses private APIs instead of the
   * proper public APIs. If this is set to true it will only allow to install or
   * enable apps that pass this check.
   *
   * Defaults to ``false``
   */
  'appcodechecker' => {{ nextcloud_olafnorge_de_environment.app_code_checker | default('false') }},

  /**
   * Check if Nextcloud is up-to-date and shows a notification if a new version is
   * available.
   *
   * Defaults to ``true``
   */
  'updatechecker' => {{ nextcloud_olafnorge_de_environment.update_checker | default('true') }},

  /**
   * URL that Nextcloud should use to look for updates
   *
   * Defaults to ``https://updates.nextcloud.com/updater_server/``
   */
  'updater.server.url' => '{{ nextcloud_olafnorge_de_environment.updater_server_url | default("https://updates.nextcloud.com/updater_server/") }}',

  /**
   * The channel that Nextcloud should use to look for updates
   *
   * Supported values:
   *   - ``daily``
   *   - ``beta``
   *   - ``stable``
   *   - ``production``
   */
  'updater.release.channel' => '{{ nextcloud_olafnorge_de_environment.updater_release_channel | default("stable") }}',

  /**
   * Is Nextcloud connected to the Internet or running in a closed network?
   *
   * Defaults to ``true``
   */
  'has_internet_connection' => {{ nextcloud_olafnorge_de_environment.has_internet_connection | default('true') }},

  /**
   * Allows Nextcloud to verify a working .well-known URL redirects. This is done
   * by attempting to make a request from JS to
   * https://your-domain.com/.well-known/caldav/
   *
   * Defaults to ``true``
   */
  'check_for_working_wellknown_setup' => {{ nextcloud_olafnorge_de_environment.check_for_working_wellknown_setup | default('true') }},

  /**
   * This is a crucial security check on Apache servers that should always be set
   * to ``true``. This verifies that the ``.htaccess`` file is writable and works.
   * If it is not, then any options controlled by ``.htaccess``, such as large
   * file uploads, will not work. It also runs checks on the ``data/`` directory,
   * which verifies that it can't be accessed directly through the Web server.
   *
   * Defaults to ``true``
   */
  'check_for_working_htaccess' => {{ nextcloud_olafnorge_de_environment.check_for_working_htaccess | default('true') }},

  /**
   * In certain environments it is desired to have a read-only configuration file.
   * When this switch is set to ``true`` Nextcloud will not verify whether the
   * configuration is writable. However, it will not be possible to configure
   * all options via the Web interface. Furthermore, when updating Nextcloud
   * it is required to make the configuration file writable again for the update
   * process.
   *
   * Defaults to ``false``
   */
  'config_is_read_only' => {{ nextcloud_olafnorge_de_environment.config_is_read_only | default('false') }},

  /**
   * By default the Nextcloud logs are sent to the ``nextcloud_olafnorge_de_environment.log`` file in the
   * default Nextcloud data directory.
   * If syslogging is desired, set this parameter to ``syslog``.
   * Setting this parameter to ``errorlog`` will use the PHP error_log function
   * for logging.
   *
   * Defaults to ``file``
   */
  'log_type' => '{{ nextcloud_olafnorge_de_environment.log_type | default("file") }}',

  /**
   * Log file path for the Nextcloud logging type.
   *
   * Defaults to ``[datadirectory]/nextcloud.log``
   */
  'logfile' => '{{ nextcloud_olafnorge_de_environment.logfile | default("") }}',

  /**
   * Loglevel to start logging at. Valid values are: 0 = Debug, 1 = Info, 2 =
   * Warning, 3 = Error, and 4 = Fatal. The default value is Warning.
   *
   * Defaults to ``2``
   */
  'loglevel' => {{ nextcloud_olafnorge_de_environment.loglevel | default("2") }},

  /**
   * If you maintain different instances and aggregate the logs, you may want
   * to distinguish between them. ``syslog_tag`` can be set per instance
   * with a unique id. Only available if ``log_type`` is set to ``syslog``.
   * The default value is ``Nextcloud``.
   */
  'syslog_tag' => '{{ nextcloud_olafnorge_de_environment.syslog_tag | default("Nextcloud") }}',

  /**
   * Log condition for log level increase based on conditions. Once one of these
   * conditions is met, the required log level is set to debug. This allows to
   * debug specific requests, users or apps
   *
   * Supported conditions:
   *  - ``shared_secret``: if a request parameter with the name `log_secret` is set to
   *                this value the condition is met
   *  - ``users``:  if the current request is done by one of the specified users,
   *                this condition is met
   *  - ``apps``:   if the log message is invoked by one of the specified apps,
   *                this condition is met
   *
   * Defaults to an empty array.
   */
  'log.condition' => json_decode('{{ nextcloud_olafnorge_de_environment.log_condition | default([]) | to_json }}', true),

  /**
   * This uses PHP.date formatting; see http://php.net/manual/en/function.date.php
   *
   * Defaults to ISO 8601 ``2005-08-15T15:52:01+00:00`` - see \DateTime::ATOM
   * (https://secure.php.net/manual/en/class.datetime.php#datetime.constants.atom)
   */
  'logdateformat' => '{{ nextcloud_olafnorge_de_environment.log_date_format | default("") }}',

  /**
   * The timezone for logfiles. You may change this; see
   * http://php.net/manual/en/timezones.php
   *
   * Defaults to ``UTC``
   */
  'logtimezone' => '{{ nextcloud_olafnorge_de_environment.log_timezone | default("Europe/Berlin") }}',

  /**
   * Append all database queries and parameters to the log file. Use this only for
   * debugging, as your logfile will become huge.
   */
  'log_query' => {{ nextcloud_olafnorge_de_environment.log_query | default('false') }},

  /**
   * Log successful cron runs.
   *
   * Defaults to ``true``
   */
  'cron_log' => {{ nextcloud_olafnorge_de_environment.cron_log | default('true') }},

  /**
   * Enables log rotation and limits the total size of logfiles. The default is 0,
   * or no rotation. Specify a size in bytes, for example 104857600 (100 megabytes
   * = 100 * 1024 * 1024 bytes). A new logfile is created with a new name when the
   * old logfile reaches your limit. If a rotated log file is already present, it
   * will be overwritten.
   *
   * Defaults to ``0`` (no rotation)
   */
  'log_rotate_size' => {{ nextcloud_olafnorge_de_environment.log_rotate_size | default("0") }},

  /**
   * When enabled, admins may install apps from the Nextcloud app store.
   *
   * Defaults to ``true``
   */
  'appstoreenabled' => {{ nextcloud_olafnorge_de_environment.appstoreenabled | default('true') }},

  /**
   * Use the ``apps_paths`` parameter to set the location of the Apps directory,
   * which should be scanned for available apps, and where user-specific apps
   * should be installed from the Apps store. The ``path`` defines the absolute
   * file system path to the app folder. The key ``url`` defines the HTTP Web path
   * to that folder, starting from the Nextcloud webroot. The key ``writable``
   * indicates if a Web server can write files to that folder.
   */
  'apps_paths' => json_decode('{{ nextcloud_olafnorge_de_environment.apps_paths | default([]) | to_json }}', true),

  /**
   * By default, Nextcloud can generate previews for the following filetypes:
   *
   * - Image files
   * - Covers of MP3 files
   * - Text documents
   *
   * Valid values are ``true``, to enable previews, or
   * ``false``, to disable previews
   *
   * Defaults to ``true``
   */
  'enable_previews' => {{ nextcloud_olafnorge_de_environment.enable_previews | default('true') }},

  /**
   * The maximum width, in pixels, of a preview. A value of ``null`` means there
   * is no limit.
   *
   * Defaults to ``2048``
   */
  'preview_max_x' => {{ nextcloud_olafnorge_de_environment.preview_max_x | default("2048") }},

  /**
   * The maximum height, in pixels, of a preview. A value of ``null`` means there
   * is no limit.
   *
   * Defaults to ``2048``
   */
  'preview_max_y' => {{ nextcloud_olafnorge_de_environment.preview_max_y | default("2048") }},

  /**
   * If a lot of small pictures are stored on the Nextcloud instance and the
   * preview system generates blurry previews, you might want to consider setting
   * a maximum scale factor. By default, pictures are upscaled to 10 times the
   * original size. A value of ``1`` or ``null`` disables scaling.
   *
   * Defaults to ``2``
   */
  'preview_max_scale_factor' => {{ nextcloud_olafnorge_de_environment.preview_max_scale_factor | default("2") }},

  /**
   * max file size for generating image previews with imagegd (default behaviour)
   * If the image is bigger, it'll try other preview generators, but will most
   * likely show the default mimetype icon. Set to -1 for no limit.
   *
   * Defaults to ``50`` megabytes
   */
  'preview_max_filesize_image' => {{ nextcloud_olafnorge_de_environment.preview_max_filesize_image | default("50") }},

  /**
   * custom path for LibreOffice/OpenOffice binary
   *
   * Defaults to ``''`` (empty string)
   */
  'preview_libreoffice_path' => '{{ nextcloud_olafnorge_de_environment.preview_libreoffice_path | default("") }}',

  /**
   * Use this if LibreOffice/OpenOffice requires additional arguments.
   *
   * Defaults to ``''`` (empty string)
   */
  'preview_office_cl_parameters' => '{{ nextcloud_olafnorge_de_environment.preview_office_cl_parameters | default("") }}',

  /**
   * Only register providers that have been explicitly enabled
   *
   * The following providers are disabled by default due to performance or privacy
   * concerns:
   *
   *  - OC\Preview\Illustrator
   *  - OC\Preview\Movie
   *  - OC\Preview\MSOffice2003
   *  - OC\Preview\MSOffice2007
   *  - OC\Preview\MSOfficeDoc
   *  - OC\Preview\OpenDocument
   *  - OC\Preview\PDF
   *  - OC\Preview\Photoshop
   *  - OC\Preview\Postscript
   *  - OC\Preview\StarOffice
   *  - OC\Preview\SVG
   *  - OC\Preview\TIFF
   *  - OC\Preview\Font
   *
   * The following providers are not available in Microsoft Windows:
   *
   *  - OC\Preview\Movie
   *  - OC\Preview\MSOfficeDoc
   *  - OC\Preview\MSOffice2003
   *  - OC\Preview\MSOffice2007
   *  - OC\Preview\OpenDocument
   *  - OC\Preview\StarOffice
   *
   * Defaults to the following providers:
   *
   *  - OC\Preview\BMP
   *  - OC\Preview\GIF
   *  - OC\Preview\JPEG
   *  - OC\Preview\MarkDown
   *  - OC\Preview\MP3
   *  - OC\Preview\PNG
   *  - OC\Preview\TXT
   *  - OC\Preview\XBitmap
   */
  'enabledPreviewProviders' => json_decode('{{ nextcloud_olafnorge_de_environment.enabled_preview_providers | default([]) | to_json }}', true),

  /**
   * Replaces the default Comments Manager Factory. This can be utilized if an
   * own or 3rdParty CommentsManager should be used that – for instance – uses the
   * filesystem instead of the database to keep the comments.
   *
   * Defaults to ``\OC\Comments\ManagerFactory``
   */
  'comments.managerFactory' => '{{ nextcloud_olafnorge_de_environment.comments_manager_factory | default("") }}',

  /**
   * Replaces the default System Tags Manager Factory. This can be utilized if an
   * own or 3rdParty SystemTagsManager should be used that – for instance – uses the
   * filesystem instead of the database to keep the tags.
   *
   * Defaults to ``\OC\SystemTag\ManagerFactory``
   */
  'systemtags.managerFactory' => '{{ nextcloud_olafnorge_de_environment.systemtags_manager_factory | default("") }}',

  /**
   * Replaces the default mail template layout. This can be utilized if the
   * options to modify the mail texts with the theming app is not enough.
   * The class must extend  ``\OC\Mail\EMailTemplate``
   */
  'mail_template_class' => '{{ nextcloud_olafnorge_de_environment.mail_template_class | default("") }}',

  /**
   * Enable maintenance mode to disable Nextcloud
   *
   * If you want to prevent users from logging in to Nextcloud before you start
   * doing some maintenance work, you need to set the value of the maintenance
   * parameter to true. Please keep in mind that users who are already logged-in
   * are kicked out of Nextcloud instantly.
   *
   * Defaults to ``false``
   */
  'maintenance' => {{ nextcloud_olafnorge_de_environment.maintenance | default('false') }},

  /**
   * Extra SSL options to be used for configuration.
    *
   * Defaults to an empty array.
   */
  'openssl' => json_decode('{{ nextcloud_olafnorge_de_environment.openssl | default([]) | to_json }}', true),

  /**
   * Memory caching backend configuration
   *
   * Available cache backends:
   *
   * * ``\OC\Memcache\APCu``       APC user backend
   * * ``\OC\Memcache\ArrayCache`` In-memory array-based backend (not recommended)
   * * ``\OC\Memcache\Memcached``  Memcached backend
   * * ``\OC\Memcache\Redis``      Redis backend
   * * ``\OC\Memcache\XCache``     XCache backend
   *
   * Advice on choosing between the various backends:
   *
   * * APCu should be easiest to install. Almost all distributions have packages.
   *   Use this for single user environment for all caches.
   * * Use Redis or Memcached for distributed environments.
   *   For the local cache (you can configure two) take APCu.
   */

  /**
   * Memory caching backend for locally stored data
   *
   * * Used for host-specific data, e.g. file paths
   *
   * Defaults to ``none``
   */
  'memcache.local' => '{{ nextcloud_olafnorge_de_environment.memcache_local | default("") }}',

  /**
   * Memory caching backend for distributed data
   *
   * * Used for installation-specific data, e.g. database caching
   * * If unset, defaults to the value of memcache.local
   *
   * Defaults to ``none``
   */
  'memcache.distributed' => '{{ nextcloud_olafnorge_de_environment.memcache_distributed | default("") }}',

  /**
   * Connection details for redis to use for memory caching in a single server configuration.
   *
   * For enhanced security it is recommended to configure Redis
   * to require a password. See http://redis.io/topics/security
   * for more information.
   */
  'redis' => json_decode('{{ nextcloud_olafnorge_de_environment.redis | default([]) | to_json }}', true),

  /**
   * Connection details for a Redis Cluster
   *
   * Only for use with Redis Clustering, for Sentinel-based setups use the single
   * server configuration above, and perform HA on the hostname.
   *
   * Redis Cluster support requires the php module phpredis in version 3.0.0 or
   * higher for PHP 7+ or phpredis in version 2.2.8 for PHP 5.6.
   *
   * Available failover modes:
   *  - \RedisCluster::FAILOVER_NONE - only send commands to master nodes (default)
   *  - \RedisCluster::FAILOVER_ERROR - failover to slaves for read commands if master is unavailable (recommended)
   *  - \RedisCluster::FAILOVER_DISTRIBUTE - randomly distribute read commands across master and slaves
   *
   * WARNING: FAILOVER_DISTRIBUTE is a not recommended setting and we strongly
   * suggest to not use it if you use Redis for file locking. Due to the way Redis
   * is synchronised it could happen, that the read for an existing lock is
   * scheduled to a slave that is not fully synchronised with the connected master
   * which then causes a FileLocked exception.
   *
   * See https://redis.io/topics/cluster-spec for details about the Redis cluster
   */
  'redis.cluster' => json_decode('{{ nextcloud_olafnorge_de_environment.redis_cluster | default([]) | to_json }}', true),

  /**
   * Server details for one or more memcached servers to use for memory caching.
   */
  'memcached_servers' => json_decode('{{ nextcloud_olafnorge_de_environment.memcached_servers | default([]) | to_json }}', true),

  /**
   * Connection options for memcached, see http://apprize.info/php/scaling/15.html
   */
  'memcached_options' => json_decode('{{ nextcloud_olafnorge_de_environment.memcached_options | default([]) | to_json }}', true),

  /**
   * Location of the cache folder, defaults to ``data/$user/cache`` where
   * ``$user`` is the current user. When specified, the format will change to
   * ``$cache_path/$user`` where ``$cache_path`` is the configured cache directory
   * and ``$user`` is the user.
   *
   * Defaults to ``''`` (empty string)
   */
  'cache_path' => '{{ nextcloud_olafnorge_de_environment.cache_path | default("") }}',

  /**
   * Replaces the default Share Provider Factory. This can be utilized if
   * own or 3rdParty Share Providers are used that – for instance – use the
   * filesystem instead of the database to keep the share information.
   *
   * Defaults to ``\OC\Share20\ProviderFactory``
   */
  'sharing.managerFactory' => '{{ nextcloud_olafnorge_de_environment.sharing_manager_factory | default("") }}',

  /**
   * Define max number of results returned by the user search for auto-completion
   * Default is unlimited (value set to 0).
   */
  'sharing.maxAutocompleteResults' => {{ nextcloud_olafnorge_de_environment.sharing_max_autocomplete_results | default("0") }},

  /**
   * Define the minimum length of the search string before we start auto-completion
   * Default is no limit (value set to 0)
   */
  'sharing.minSearchStringLength' => {{ nextcloud_olafnorge_de_environment.sharing_min_search_string_length | default("0") }},

  /**
   * Secret used by Nextcloud for various purposes, e.g. to encrypt data. If you
   * lose this string there will be data corruption.
   */
  'secret' => '',

  /**
   * List of trusted proxy servers
   *
   * If you configure these also consider setting `forwarded_for_headers` which
   * otherwise defaults to `HTTP_X_FORWARDED_FOR` (the `X-Forwarded-For` header).
   * Defaults to an empty array.
   */
  'trusted_proxies' => json_decode('{{ nextcloud_olafnorge_de_environment.trusted_proxies | default([]) | to_json }}', true),

  /**
   * Headers that should be trusted as client IP address in combination with
   * `trusted_proxies`. If the HTTP header looks like 'X-Forwarded-For', then use
   * 'HTTP_X_FORWARDED_FOR' here.
   *
   * If set incorrectly, a client can spoof their IP address as visible to
   * Nextcloud, bypassing access controls and making logs useless!
   *
   * Defaults to ``'HTTP_X_FORWARED_FOR'``
   */
  'forwarded_for_headers' => json_decode('{{ nextcloud_olafnorge_de_environment.forwarded_for_headers | default([]) | to_json }}', true),

  /**
   * Enables transactional file locking.
   * This is enabled by default.
   *
   * Prevents concurrent processes from accessing the same files
   * at the same time. Can help prevent side effects that would
   * be caused by concurrent operations. Mainly relevant for
   * very large installations with many users working with
   * shared files.
   *
   * Defaults to ``true``
   */
  'filelocking.enabled' => {{ nextcloud_olafnorge_de_environment.filelocking_enabled | default('true') }},

  /**
   * Memory caching backend for file locking
   *
   * Because most memcache backends can clean values without warning using redis
   * is highly recommended to *avoid data loss*.
   *
   * Defaults to ``none``
   */
  'memcache.locking' => '{{ nextcloud_olafnorge_de_environment.memcache_locking | default("") }}',

  /**
   * Enable locking debug logging
   *
   * Note that this can lead to a very large volume of log items being written which can lead
   * to performance degradation and large log files on busy instance.
   *
   * Thus enabling this in production for longer periods of time is not recommended
   * or should be used together with the ``log.condition`` setting.
   */
  'filelocking.debug' => {{ nextcloud_olafnorge_de_environment.filelocking_debug | default('false') }},

  /**
   * Disable the web based updater
   */
  'upgrade.disable-web' => {{ nextcloud_olafnorge_de_environment.upgrade_disable_web | default('true') }},

  /**
   * Set this Nextcloud instance to debugging mode
   *
   * Only enable this for local development and not in production environments
   * This will disable the minifier and outputs some additional debug information
   *
   * Defaults to ``false``
   */
  'debug' => {{ nextcloud_olafnorge_de_environment.debug | default('false') }},

  'installed' => true,
];
